use tavern::{Alignment, Cell, Contents, Font, Grid, Section};

pub fn headline(level, school, ritual) {
    let lowercase = school.to_lowercase();

    let headline = match level {
        0 => format!("{school} cantrip"),
        1 => format!("1st-level {lowercase}"),
        2 => format!("2nd-level {lowercase}"),
        3 => format!("3rd-level {lowercase}"),
        _ => {
            if (4..=9).contains(level) {
                format!("{level}th-level {lowercase}")
            } else {
                tavern::bail!("unsupported level {level}")
            }
        }
    };

    if ritual {
        headline += " (ritual)";
    }

    Ok(headline)
}

pub fn component_string(components) {
    let string = "";

    if components["verbal"] {
        string.push('V');
    }

    if components["somatic"] {
        if string.is_empty() {
            string.push('S')
        } else {
            string.push_str(", S")
        }
    }

    if components.contains_key("material") {
        if !string.is_empty() {
            string.push_str(", ")
        }
        string.push_str(format!("M ({})", components["material"]))
    }

    string
}

pub fn duration_string(concentration, duration) {
    if !concentration {
        return duration;
    }

    format!("Concentration, {}", duration.to_lowercase())
}

pub fn get_layout() {
    let layout = [];
    
    let title = [
        Cell::try_new(0..12, 0..2, Contents::new_text("name").read_only()?)?,
        Cell::try_new(0..12, 2..3, Contents::new_text("headline").read_only()?.font(Font::Italic)?)?,
    ];

    layout.push(Section::Grid(Grid::new(title, false)));

    let header_top = [
        Cell::try_new(0..3, 0..1, Contents::new_label().label("Casting Time")?.align(Alignment::Right)?)?,
        Cell::try_new(3..12, 0..1, Contents::new_text("casting_time").read_only()?)?,
        Cell::try_new(0..3, 1..2, Contents::new_label().label("Range")?.align(Alignment::Right)?)?,
        Cell::try_new(3..12, 1..2, Contents::new_text("range").read_only()?)?,
    ];

    layout.push(Section::Grid(Grid::new(header_top, false)));

    let components = [
        Cell::try_new(0..3, 0..1, Contents::new_label().label("Components")?.align(Alignment::Right)?)?,
        Cell::try_new(3..12, 0..1, Contents::new_text_area("component_string").read_only()?)?,
    ];

    layout.push(Section::Grid(Grid::new(components, false)));

    let duration = [
        Cell::try_new(0..3, 0..1, Contents::new_label().label("Duration")?.align(Alignment::Right)?)?,
        Cell::try_new(3..12, 0..1, Contents::new_text("duration_string").read_only()?)?,
    ];

    layout.push(Section::Grid(Grid::new(duration, false)));

    let description = [
        Cell::try_new(0..12, 0..1, Contents::new_text_area("description").use_markdown()?.read_only()?)?
    ];

    layout.push(Section::Grid(Grid::new(description, false)));

    Ok(layout)
}